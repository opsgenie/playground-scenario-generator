# Copy this to the same path as application.properties and update accordingly

# server properties
server.port = 9008

# scenario configurations
scenario.application=easyTravel

# EasyTravel config
easyTravel.apiUrl=http://localhost:8091

## min and max times are 1 and 3 minutes by default
easyTravel.availableScenarios[0].id=CPULoad
easyTravel.availableScenarios[0].name=Long response times for searching/booking activities
easyTravel.availableScenarios[0].description=Long response times for searching/booking activities problem that consumer faces is caused by high CPU usage in the backend process that provokes an unhealthy host state. The additional CPU time is triggered in 8 separate threads independent of any searching/booking activity.
easyTravel.availableScenarios[0].minTime=20
easyTravel.availableScenarios[0].maxTime=200

easyTravel.availableScenarios[1].id=GarbageCollectionEvery10Seconds
easyTravel.availableScenarios[1].name=Periodic application freeze
easyTravel.availableScenarios[1].description=Application is frozen for a moment because of a manual full garbage collection on the Business Backend process when searching for journeys. The GC is triggered every 10 seconds.
easyTravel.availableScenarios[2].id=CreditCardCheckError500
easyTravel.availableScenarios[2].name=Credit card check error
easyTravel.availableScenarios[2].description=Simulates an exception while communicating with the native application. This is triggered when the credit card is validated as part of booking a journey in the customer web frontend.

logging.level.=DEBUG